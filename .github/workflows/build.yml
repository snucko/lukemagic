name: Build and Deploy (lukemagic)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout site
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Mini-mirror: pull content & media repos into the working tree
      - name: Pull content/media (mini-mirror)
        env:
          CONTENT_PAT: ${{ secrets.CONTENT_PAT }} # optional; needed only if repos are private
        run: |
          set -euo pipefail
          # Use token for private repos
          if [ -n "${CONTENT_PAT:-}" ]; then
            git config --global url."https://oauth2:${CONTENT_PAT}@github.com/".insteadOf "https://github.com/"
          fi

          rm -rf tmp-mirror && mkdir -p tmp-mirror
          cd tmp-mirror

          echo "==> Mirroring luke-content -> src/content/"
          git clone --depth=1 https://github.com/snucko/luke-content.git content
          rsync -a --delete content/ ../src/content/

          echo "==> Mirroring luke-media -> public/media/"
          git clone --depth=1 https://github.com/snucko/luke-media.git media
          rsync -a --delete media/ ../public/media/

          cd ..
          rm -rf tmp-mirror

      # Keep Astro content collections happy (no loose files at src/content/)
      - name: Clean content root
        run: |
          set -euo pipefail
          mkdir -p src/content/tricks src/content/posts src/content/shows
          find src/content -maxdepth 1 -type f -print -delete || true

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
           npm install --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
